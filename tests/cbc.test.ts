import { describe, test, expect } from "bun:test";
import { Kalyna128, Kalyna128_256, Kalyna256, Kalyna256_512, Kalyna512, encryptCBC, decryptCBC } from "../src";
import { hexToBytes } from "@li0ard/gost3413/dist/utils";

describe("CBC", () => {
    test("128/128", () => {
        let a = new Kalyna128(hexToBytes("000102030405060708090A0B0C0D0E0F"));
        let iv = hexToBytes("101112131415161718191A1B1C1D1E1F");
        let ct = hexToBytes("a73625d7be994e85469a9faabcedaab6dbc5f65dd77bb35e06bd7d1d8eafc8624d6cb31ce189c82b8979f2936de9bf14");
        let pt = hexToBytes("202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F");

        expect(encryptCBC(a, pt, iv)).toStrictEqual(ct);
        expect(decryptCBC(a, ct, iv)).toStrictEqual(pt);
    })
    test("128/256", () => {
        let a = new Kalyna128_256(hexToBytes("1F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100"));
        let iv = hexToBytes("2F2E2D2C2B2A29282726252423222120");
        let ct = hexToBytes("5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130");
        let pt = hexToBytes("bc8f026fc603ece05c24fde87542730999b381870882ac0535d4368c4babd81b884e96e853ee7e055262d9d204fbe212");

        expect(encryptCBC(a, pt, iv)).toStrictEqual(ct);
        expect(decryptCBC(a, ct, iv)).toStrictEqual(pt);
    })

    test("256/256", () => {
        let a = new Kalyna256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let iv = hexToBytes("202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F");
        let pt = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F");
        let ct = hexToBytes("9cdfdaa75929e7c2a5cfc1bf16b42c5ae3886d0258e8c577dc01daf62d185fb999b9867736b87110f5f1bc7481912c593f48ff79e2afdfab9f704a277ec3e557b1b0a9f223dae6ed5af591c4f2d6fb22e48334f5e9b96b1a2ea5200f30a406ce");

        expect(encryptCBC(a, pt, iv)).toStrictEqual(ct);
        expect(decryptCBC(a, ct, iv)).toStrictEqual(pt);
    })
    test("256/512", () => {
        let a = new Kalyna256_512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let iv = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F");
        let pt = hexToBytes("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF");
        let ct = hexToBytes("b8a2474578c2febf3f94703587bd5fdc3f4a4d2f43575b6144a1e1031fb3d1452b7fd52f5e3411461dac506869ff8d2faef4fee60379ae00b33aa3eaf911645af8091cd8a45d141d1fb150e5a01c1f26ff3dbd26ac4225ec7577b2ce57a5b0ff");

        expect(encryptCBC(a, pt, iv)).toStrictEqual(ct);
        expect(decryptCBC(a, ct, iv)).toStrictEqual(pt);
    })

    test("512", () => {
        let a = new Kalyna512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let iv = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F");
        let pt = hexToBytes("808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF");
        let ct = hexToBytes("d4739b829ef901b24c1162ae4fdef897eda41fac7f5770cdc90e1d1cdf124e8d7831e06b4498a4b6f6ec815df2461dc99bb0449b0f09fcaa2c84090534bcc9329626fd74ef8f0a0bcb5765184629c3cbf53b0fb134f6d0421174b1c4e884d1cd1069a7ad19752dcebf655842e79b7858bde01390a760d85e88925bfe38b0fa57");

        expect(encryptCBC(a, pt, iv)).toStrictEqual(ct);
        expect(decryptCBC(a, ct, iv)).toStrictEqual(pt);
    })
})