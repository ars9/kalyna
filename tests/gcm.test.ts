import { describe, test, expect } from "bun:test";
import { Kalyna128, Kalyna128_256, Kalyna256, Kalyna256_512, Kalyna512, decryptGCM, encryptGCM, gmac } from "../src";
import { hexToBytes } from "@li0ard/gost3413/dist/utils";

describe("GCM", () => {
    test("128/256", () => {
        let a = new Kalyna128_256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let iv = hexToBytes("202122232425262728292A2B2C2D2E2F");
        let ad = hexToBytes("303132333435363738393A3B3C3D3E3F");
        let pt = hexToBytes("505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F");
        let ct = hexToBytes("FF83F27C6D4EA26101B1986235831406A297940D6C0E695596D612623E0E7CDC3C474281AFEAE4FD6D61E995258747AB");

        expect(encryptGCM(a, pt, iv, ad)).toStrictEqual(ct);
        expect(decryptGCM(a, ct, iv, ad)).toStrictEqual(pt);
    })

    test("256/256", () => {
        let a = new Kalyna256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let iv = hexToBytes("202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F");
        let ad = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F");
        let pt = hexToBytes("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F");
        let ct = hexToBytes("7EC15C54BB553CB1437BE0EFDD2E810F6058497EBCE4408A08A73FADF3F459D56B0103702D13AB73ACD2EB33A8B5E9CFFF5EB21865A6B499C10C810C4BAEBE801D61B0A3018F6B849CBA20AF1DDDA245B1B296258AC0352A52D3F372E72224CE");

        expect(encryptGCM(a, pt, iv, ad, 32)).toStrictEqual(ct);
        expect(decryptGCM(a, ct, iv, ad, 32)).toStrictEqual(pt);
        expect(encryptGCM(a, pt, iv, ad)).toStrictEqual(ct.subarray(0, 80));
        expect(decryptGCM(a, ct.subarray(0, 80), iv, ad)).toStrictEqual(pt);
    })
    test("256/512", () => {
        let a = new Kalyna256_512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let iv = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F");
        let ad = hexToBytes("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F");
        let pt = hexToBytes("808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF");
        let ct = hexToBytes("3EBDB4584B5169A26FBEBA0295B4223F58D5D8A031F2950A1D7764FAB97BA058E9E2DAB90FF0C519AA88435155A71B7B53BB100F5D20AFFAC0552F5F2813DEE88555FD3D9B02C2325ACA3CC9309D6B4B9AFC697D13BBBFF067198D5D86CB9820");

        expect(encryptGCM(a, pt, iv, ad, 32)).toStrictEqual(ct);
        expect(decryptGCM(a, ct, iv, ad, 32)).toStrictEqual(pt);
    })

    test("512", () => {
        let a = new Kalyna512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let iv = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F");
        let ad = hexToBytes("808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF");
        let pt = hexToBytes("C0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF");
        let ct = hexToBytes("220642D7277D104788CF97B10210984F506435512F7BF153C5CDABFECC10AFB4A2E2FC51F616AF80FFDD0607FAD4F542B8EF0667717CE3EAAA8FBC303CE76C9978A77E5948F5DC05F551486FDBB44898C9AB1BD439D7519841AE31007C09E1B312E5EA5929F952F6A3EEF5CBEAEF262B8EC1884DFCF4BAAF7B5C9291A22489E1");

        expect(encryptGCM(a, pt, iv, ad, 64)).toStrictEqual(ct);
        expect(decryptGCM(a, ct, iv, ad, 64)).toStrictEqual(pt);
    })
})

describe("GMAC", () => {
    test("128/256", () => {
        let a = new Kalyna128_256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let pt = hexToBytes("303132333435363738393A3B3C3D3E3F");
        let ct = hexToBytes("5AE309EE80B583C6523397ADCB5704C4");

        expect(gmac(a, pt)).toStrictEqual(ct);
        /*console.log(encryptGCM(
            new Kalyna128_256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F")),
            hexToBytes("505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F"),
            hexToBytes("202122232425262728292A2B2C2D2E2F"),
            hexToBytes("303132333435363738393A3B3C3D3E3F")
        ).toHex())
        console.log(decryptGCM(
            new Kalyna128_256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F")),
            hexToBytes("ff83f27c6d4ea26101b1986235831406a297940d6c0e695596d612623e0e7cdc3c474281afeae4fd6d61e995258747ab"),
            hexToBytes("202122232425262728292A2B2C2D2E2F"),
            hexToBytes("303132333435363738393A3B3C3D3E3F")
        ).toHex())*/
    })

    test("256/256", () => {
        let a = new Kalyna256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let pt = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F");
        let ct = hexToBytes("FF48B56F2C26CC484B8F5952D7B3E1FE69577701C50BE96517B33921E44634CD");

        expect(gmac(a, pt)).toStrictEqual(ct.subarray(0, 16));
        expect(gmac(a, pt, new Uint8Array(), 32)).toStrictEqual(ct);
    })
    test("256/512", () => {
        let a = new Kalyna256_512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let pt = hexToBytes("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F");
        let ct = hexToBytes("96F61FA0FDE92883C5041D748F9AE91F3A0A50415BFA1466855340A5714DC01F");

        expect(gmac(a, pt, new Uint8Array(), 32)).toStrictEqual(ct);
    })

    test("512", () => {
        let a = new Kalyna512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let pt = hexToBytes("808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF");
        let ct = hexToBytes("897C32E05E776FD988C5171FE70BB72949172E514E3308A871BA5BD898FB6EBD6E3897D2D55697D90D6428216C08052E3A5E7D4626F4DBBF1546CE21637357A3");

        expect(gmac(a, pt, new Uint8Array(), 64)).toStrictEqual(ct);
    })
})