import { describe, test, expect } from "bun:test";
import { Kalyna128, Kalyna128_256, Kalyna256, Kalyna256_512, Kalyna512, ctr } from "../src";
import { hexToBytes } from "@li0ard/gost3413/dist/utils";

describe("CTR", () => {
    test("128/128", () => {
        let a = new Kalyna128(hexToBytes("000102030405060708090A0B0C0D0E0F"));
        let iv = hexToBytes("101112131415161718191A1B1C1D1E1F")
        let pt = hexToBytes("202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748")
        let ct = hexToBytes("a90a6b9780abdfdff64d14f5439e88f266dc50edd341528dd5e698e2f000ce21f872daf9fe1811844a")

        expect(ctr(a, pt, iv)).toStrictEqual(ct);
        expect(ctr(a, ct, iv)).toStrictEqual(pt);
    })
    test("128/256", () => {
        let a = new Kalyna128_256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let iv = hexToBytes("202122232425262728292A2B2C2D2E2F")
        let pt = hexToBytes("303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F")
        let ct = hexToBytes("9fe3921c0d2ec20161d1f80255e3746682b7b42d4c2e4975b6f632421e2e5cfc")

        expect(ctr(a, pt, iv)).toStrictEqual(ct);
        expect(ctr(a, ct, iv)).toStrictEqual(pt);
    })

    test("256/256", () => {
        let a = new Kalyna256(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F"));
        let iv = hexToBytes("202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F")
        let pt = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")
        let ct = hexToBytes("5ee17c749b751c91635bc0cffd0ea12f4078695e9cc460aa28871f8dd3d479f58be1e390cdf34b934c320bd34855092f1fbe52f88546547921ec61ecab4e5e6086711ea79ddba33473e93005eecabf6e")

        expect(ctr(a, pt, iv)).toStrictEqual(ct);
        expect(ctr(a, ct, iv)).toStrictEqual(pt);
    })
    test("256/512", () => {
        let a = new Kalyna256_512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let iv = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")
        let pt = hexToBytes("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF")
        let ct = hexToBytes("de5d54b8abb189428f5e5ae27554c2dfb8353840d11275eafd97841a599b40b8c9c2fa992fd0e5398aa8637175873b5b739b302f7d008fdae0750f7f0833fec8efd851d8dbb62a93673ce7009fd2d96c")

        expect(ctr(a, pt, iv)).toStrictEqual(ct);
        expect(ctr(a, ct, iv)).toStrictEqual(pt);
    })

    test("512", () => {
        let a = new Kalyna512(hexToBytes("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F"));
        let iv = hexToBytes("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")
        let pt = hexToBytes("808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF")
        let ct = hexToBytes("62460297673d5007c88fd7f14250d80f102475116f3bb113858debbe8c50eff4e2a2bc11b656efc0bf9d4647ba94b502f8af4627313ca3aaeacffc707ca72cd9a95b1cce08dc4dd4a8ea0765986103c21b7c0db0fbb602f279b1a00d5e4ffa18")

        expect(ctr(a, pt, iv)).toStrictEqual(ct);
        expect(ctr(a, ct, iv)).toStrictEqual(pt);
    })
})